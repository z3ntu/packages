diff -rupN namcap-2.6//Namcap/depends.py namcap-2.6-noldconfig//Namcap/depends.py
--- namcap-2.6//Namcap/depends.py	2010-06-08 15:10:59.000000000 +0000
+++ namcap-2.6-noldconfig//Namcap/depends.py	2010-08-25 22:47:40.000000000 +0000
@@ -155,19 +155,42 @@ def getprovides(depends, provides):
 			provides[i] = pac.provides
 
 def filllibcache():
-	var = subprocess.Popen('ldconfig -p', 
-			shell=True,
-			stdout=subprocess.PIPE,
-			stderr=subprocess.PIPE).communicate()
-	libline = re.compile('\s*(.*) \((.*)\) => (.*)')
-	for j in var[0].split('\n'):
-		g = libline.match(j)
-		if g != None:
-			if g.group(2).startswith('libc6,x86-64'):
-				libcache['x86-64'][g.group(1)] = g.group(3)
-			else:
-				libcache['i686'][g.group(1)] = g.group(3)
+  # Arch Hurd doesn't use ldconfig, which namcap usually uses 
+  # to determine the whereabouts of system libraries.
+  #
+  # Therefore, we assume that they will always be in subdirectories of
+  # /lib, and thus walk through /lib's tree looking for any so files 
+  # that may happen to live there.
+  #
+  # Note that for now we're only looking for i686 libraries. At the 
+  # time of packaging, Arch Hurd only supported i686.
 
+  curdir = "/lib"
+
+  # This regex should match all shared object files
+  libline = re.compile(".*\.so(\..*)*")
+
+  for root, dirs, files in os.walk("/lib"):
+    for f in files:
+      # If a line looks like a library, add it.
+      if libline.match(f):
+        libcache['i686'][f] = root + "/" + f
+
+# Original filllibcache follows:
+
+#def filllibcache():
+#	var = subprocess.Popen('ldconfig -p', 
+#			shell=True,
+#			stdout=subprocess.PIPE,
+#			stderr=subprocess.PIPE).communicate()
+#	libline = re.compile('\s*(.*) \((.*)\) => (.*)')
+#	for j in var[0].split('\n'):
+#		g = libline.match(j)
+#		if g != None:
+#			if g.group(2).startswith('libc6,x86-64'):
+#				libcache['x86-64'][g.group(1)] = g.group(3)
+#			else:
+#				libcache['i686'][g.group(1)] = g.group(3)
 
 class package:
 	def short_name(self):
