# Maintainer: Stephen Gilles <stephendgilles@gmail.com>
# Maintainer: Matthias Lanzinger <mlaenz@gmail.com>

pkgname=glibc
pkgver=2.16.90.$(date +%Y%m%d)git
pkgrel=1
pkgdesc="GNU C Library"
arch=(i686)
url="http://www.gnu.org/software/libc"
license=('GPL','LGPL')
groups=('base')
depends=('hurd>=20010817')
makedepends=('hurd' 'gcc>=4.3')
options=('!strip')

source=(locale.gen.txt
        locale-gen)

__glibcgitroot="git://git.sv.gnu.org/hurd/glibc.git"
__glibcgitbranch="rbraun/hurd_with_pthreads"
__libpthreadgitroot="git://git.sv.gnu.org/hurd/libpthread.git"
__libpthreadgitbranch="rbraun/hurd_with_pthreads"

build() {
  cd "$srcdir"
  msg "Connecting to GIT server...."
 
  if [ -d glibc-git -a -d libpthread-git ] ; then
    cd "$srcdir/glibc-git" && git pull 
    cd "$srcdir/libpthread-git" && git pull
  else
    rm -rf glibc-git libpthread-git
    git clone $__glibcgitroot -b $__glibcgitbranch glibc-git
    git clone $__libpthreadgitroot -b $__libpthreadgitbranch libpthread-git
  fi

  ## Sometimes during git cloning/pulling the sheer amount of data prevents a
  ## full merge from taking place.  This forces all files to be checked out.
  #cd "${srcdir}/${pkgname}-git"
  #git reset --hard HEAD
  #cd "${srcdir}"

  msg "GIT checkout done or server timeout"
  msg "Starting make..."

  if [ -e ${srcdir}/.prepared ]; then
    msg2 "Build directory already prepared"
  else
    msg2 "Preparing build directory"
    rm -rf "$srcdir/$pkgname" "$srcdir/build"
    cp -r "$srcdir/glibc-git" "$srcdir/$pkgname"
    cp -a "$srcdir/libpthread-git" "$srcdir/$pkgname/libpthread"
    mkdir "$srcdir/build"

    touch "$srcdir/.prepared"
  fi

  cd ${srcdir}/${pkgname}

  #Patching here
  if [ -e ${srcdir}/.patched ]; then
    msg2 "Already patched"
  else
    msg2 "Patching"

    # This is either a bug in the makefile system, or a bug in my personal
    # setup.  Either way, this is a quick and dirty fix
    mkdir -p "$srcdir/build/nss/"
    cp "$srcdir/libpthread-git/include/pthread/pthread.h" \
      "$srcdir/build/nss/"

    touch ${srcdir}/.patched
  fi

  cd ${srcdir}/build
  
  if [ -e ${srcdir}/.configured ]; then
    msg2 "Already configured"
  else
    msg2 "Configuring"
    ../${pkgname}/configure --prefix= --build=i686-pc-gnu \
              --libexecdir=/lib \
              --without-gd --without-cvs --disable-multi-arch \
              --disable-profile --enable-add-ons=
    touch "$srcdir/.configured"
  fi

  make
}

package() {
  cd ${srcdir}/build

  make install_root="$pkgdir" install
#  make install_root="$pkgdir" libpthread-install

  install -dm755 ${pkgdir}/lib/locale
  install -m755 ${srcdir}/locale-gen ${pkgdir}/sbin

  # create /etc/locale.gen
  install -m644 ${srcdir}/locale.gen.txt ${pkgdir}/etc/locale.gen
  cp ${srcdir}/${pkgname}/localedata/SUPPORTED ${pkgdir}/
  sed -i 's:/: :g' ${pkgdir}/SUPPORTED
  sed -i 's:\\: :g' ${pkgdir}/SUPPORTED
  sed -i 's:SUPPORTED-LOCALES=::' ${pkgdir}/SUPPORTED
  cat ${pkgdir}/SUPPORTED >> ${pkgdir}/etc/locale.gen
  sed -i 's:^:#:g' ${pkgdir}/etc/locale.gen
  rm ${pkgdir}/SUPPORTED

  # allows building gnumach, dde, etc
  echo "INPUT ( AS_NEEDED ( -lmachuser -lhurduser ) )" >> ${pkgdir}/lib/libc.so

  cd ${pkgdir}/lib
  ln -s ld.so.1 ld.so
}

md5sums=('07ac979b6ab5eeb778d55f041529d623'
         '476e9113489f93b348b21e144b6a8fcf')
