# Maintainer: Alexander Preisinger <alexander.preisinger@gmail.com>

pkgname=ncurses
pkgver=5.7
pkgrel=2
pkgdesc="System V Release 4.0 curses emulation library"
arch=('i686' 'x86_64')
url="http://www.gnu.org/software/ncurses/"
license=('MIT')
groups=('base')
depends=('glibc')
source=(ftp://ftp.gnu.org/pub/gnu/${pkgname}/${pkgname}-${pkgver}.tar.gz)
md5sums=('cce05daf61a64501ef6cd8da1f727ec6')

build() {
  cd ${srcdir}/${pkgname}-${pkgver}

  ./configure --prefix= --mandir=/share/man \
     --with-shared --with-normal --without-debug --without-ada \
     --with-install-prefix=${pkgdir} --enable-widec 
  make || return 1
}
 
package() {
  cd ${srcdir}/${pkgname}-${pkgver}
  make install || return 1

  # move libraries needed for boot to /lib (we call tput in initscripts)
  ln -sf ../../lib/libncursesw.so.5 ${pkgdir}/lib/libncursesw.so

  # Fool packages looking to link to non-wide-character ncurses libraries
  for lib in curses ncurses form panel menu ; do \
    rm -f ${pkgdir}/lib/lib${lib}.so ; \
    echo "INPUT(-l${lib}w)" >${pkgdir}/lib/lib${lib}.so ; \
    ln -sf lib${lib}w.a ${pkgdir}/lib/lib${lib}.a ; \
  done
  ln -sf libncurses++w.a ${pkgdir}/lib/libncurses++.a

  # Some packages look for -lcurses during build
  rm -f ${pkgdir}/lib/libcursesw.so
  echo "INPUT(-lncursesw)" >${pkgdir}/lib/libcursesw.so
  ln -sf libncurses.so ${pkgdir}/lib/libcurses.so
  ln -sf libncursesw.a ${pkgdir}/lib/libcursesw.a
  ln -sf libncurses.a ${pkgdir}/lib/libcurses.a

  # Install libncurses.so.5 for external binary support 
#  ./configure --prefix= \
#    --with-shared --with-normal --without-debug --without-ada \
#    --with-install-prefix=${pkgdir}
#  make || return 1
#  
#  install -Dm755 lib/libncurses.so.${pkgver} ${pkgdir}/lib/libncurses.so.${pkgver}
#  ln -sf libncurses.so.${pkgver} ${pkgdir}/lib/libncurses.so.5
#
#  # install license, rip it from the readme
#  cd ${srcdir}/${pkgname}-${pkgver}
#  install -dm755 ${pkgdir}/share/licenses/$pkgname
#  grep -B 100 '$Id' README > ${pkgdir}/share/licenses/${pkgname}/license.txt
}
