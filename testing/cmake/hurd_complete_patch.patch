diff -rup0 orig//Modules/FindGTK2.cmake new//Modules/FindGTK2.cmake
--- orig//Modules/FindGTK2.cmake	2010-06-28 15:15:57.000000000 +0000
+++ new//Modules/FindGTK2.cmake	2010-07-03 20:13:18.000000000 +0000
@@ -441,0 +442 @@ foreach(_GTK2_component ${GTK2_FIND_COMP
+        _GTK2_FIND_INCLUDE_DIR(GTK2_PANGOMMCONFIG_INCLUDE_DIR pangommconfig.h)
diff -rup0 orig//Modules/FindJNI.cmake new//Modules/FindJNI.cmake
--- orig//Modules/FindJNI.cmake	2010-06-28 15:15:57.000000000 +0000
+++ new//Modules/FindJNI.cmake	2010-07-03 20:13:28.000000000 +0000
@@ -32,18 +32,43 @@ MACRO(java_append_library_directories _v
-    IF (CMAKE_SYSTEM_NAME MATCHES "Linux")
-        # Based on openjdk/jdk/make/common/shared/Platform.gmk as of 6b16
-        # and kaffe as of 1.1.8 which uses the first part of the
-        # GNU config.guess platform triplet.
-        IF(CMAKE_SYSTEM_PROCESSOR MATCHES "^i[3-9]86$")
-            SET(_java_libarch "i386")
-        ELSEIF(CMAKE_SYSTEM_PROCESSOR STREQUAL "x86_64")
-            SET(_java_libarch "amd64" "x86_64")
-        ELSEIF(CMAKE_SYSTEM_PROCESSOR MATCHES "^ppc")
-            SET(_java_libarch "ppc" "powerpc" "ppc64")
-        ELSEIF(CMAKE_SYSTEM_PROCESSOR MATCHES "^sparc")
-            SET(_java_libarch "sparc" "sparcv9")
-        ELSE(CMAKE_SYSTEM_PROCESSOR MATCHES "^i[3-9]86$")
-            SET(_java_libarch "${CMAKE_SYSTEM_PROCESSOR}")
-        ENDIF(CMAKE_SYSTEM_PROCESSOR MATCHES "^i[3-9]86$")
-    ELSE(CMAKE_SYSTEM_NAME MATCHES "Linux")
-        SET(_java_libarch "i386" "amd64" "ppc") # previous default
-    ENDIF(CMAKE_SYSTEM_NAME MATCHES "Linux")
+    # Mostly based on openjdk/jdk/make/common/shared/Platform.gmk as of openjdk
+    # 1.6.0_18 + icedtea patches. However, it would be much better to base the
+    # guess on the first part of the GNU config.guess platform triplet.
+    IF(CMAKE_SYSTEM_PROCESSOR STREQUAL "x86_64")
+        SET(_java_libarch "amd64")
+    ELSEIF(CMAKE_SYSTEM_PROCESSOR MATCHES "^i.86$")
+        SET(_java_libarch "i386")
+    ELSEIF(CMAKE_SYSTEM_PROCESSOR MATCHES "^alpha")
+        SET(_java_libarch "alpha")
+    ELSEIF(CMAKE_SYSTEM_PROCESSOR MATCHES "^arm")
+        # Subdir is "arm" for both big-endian (arm) and little-endian (armel).
+        SET(_java_libarch "arm")
+    ELSEIF(CMAKE_SYSTEM_PROCESSOR MATCHES "^mips")
+        # mips* machines are bi-endian mostly so processor does not tell
+        # endianess of the underlying system.
+        SET(_java_libarch "${CMAKE_SYSTEM_PROCESSOR}" "mips" "mipsel" "mipseb")
+    ELSEIF(CMAKE_SYSTEM_PROCESSOR MATCHES "^(powerpc|ppc)64")
+        SET(_java_libarch "ppc64")
+    ELSEIF(CMAKE_SYSTEM_PROCESSOR MATCHES "^(powerpc|ppc)")
+        SET(_java_libarch "ppc")
+    ELSEIF(CMAKE_SYSTEM_PROCESSOR MATCHES "^sparc")
+        # Both flavours can run on the same processor
+        SET(_java_libarch "${CMAKE_SYSTEM_PROCESSOR}" "sparc" "sparcv9")
+    ELSEIF(CMAKE_SYSTEM_PROCESSOR MATCHES "^(parisc|hppa)")
+        SET(_java_libarch "parisc" "parisc64")
+    ELSEIF(CMAKE_SYSTEM_PROCESSOR MATCHES "^s390")
+        # s390 binaries can run on s390x machines
+        SET(_java_libarch "${CMAKE_SYSTEM_PROCESSOR}" "s390" "s390x")
+    ELSEIF(CMAKE_SYSTEM_PROCESSOR MATCHES "^sh")
+        SET(_java_libarch "sh")
+    ELSE(CMAKE_SYSTEM_PROCESSOR STREQUAL "x86_64")
+        SET(_java_libarch "${CMAKE_SYSTEM_PROCESSOR}")
+    ENDIF(CMAKE_SYSTEM_PROCESSOR STREQUAL "x86_64")
+
+    # Append default list architectures if CMAKE_SYSTEM_PROCESSOR was empty or
+    # system is non-Linux (where the code above has not been well tested)
+    IF(NOT _java_libarch OR NOT (CMAKE_SYSTEM_NAME MATCHES "Linux"))
+        LIST(APPEND _java_libarch "i386" "amd64" "ppc")
+    ENDIF(NOT _java_libarch OR NOT (CMAKE_SYSTEM_NAME MATCHES "Linux"))
+
+    # Sometimes ${CMAKE_SYSTEM_PROCESSOR} is added to the list to prefer
+    # current value to a hardcoded list. Remove possible duplicates.
+    LIST(REMOVE_DUPLICATES _java_libarch)
diff -rup0 orig//Modules/Platform/GNU.cmake new//Modules/Platform/GNU.cmake
--- orig//Modules/Platform/GNU.cmake	2010-06-28 15:15:57.000000000 +0000
+++ new//Modules/Platform/GNU.cmake	2010-07-03 20:12:49.000000000 +0000
@@ -6,0 +7 @@ SET(CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG_
+SET(CMAKE_SHARED_LIBRARY_RPATH_LINK_C_FLAG "-Wl,-rpath-link,")
@@ -7,0 +9,4 @@ SET(CMAKE_SHARED_LIBRARY_SONAME_C_FLAG "
+SET(CMAKE_SHARED_LIBRARY_SONAME_Fortran_FLAG "-Wl,-soname,")
+SET(CMAKE_EXE_EXPORTS_C_FLAG "-Wl,--export-dynamic")
+SET(CMAKE_EXE_EXPORTS_CXX_FLAG "-Wl,--export-dynamic")
+
diff -rup0 orig//Source/CPack/cmCPackDebGenerator.cxx new//Source/CPack/cmCPackDebGenerator.cxx
--- orig//Source/CPack/cmCPackDebGenerator.cxx	2010-06-28 15:15:59.000000000 +0000
+++ new//Source/CPack/cmCPackDebGenerator.cxx	2010-07-03 20:13:38.000000000 +0000
@@ -124 +124 @@ int cmCPackDebGenerator::CompressFiles(c
-    out << "Installed-Size: " << totalSize << "\n";
+    out << "Installed-Size: " << (totalSize + 1023) / 1024 << "\n";
Only in new//Source/kwsys: ProcessUNIX.c.orig
Only in new//Source/kwsys: ProcessUNIX.c.rej
diff -rup0 orig//Utilities/cmlibarchive/libarchive/archive_read_disk_entry_from_file.c new//Utilities/cmlibarchive/libarchive/archive_read_disk_entry_from_file.c
--- orig//Utilities/cmlibarchive/libarchive/archive_read_disk_entry_from_file.c	2010-06-28 15:16:06.000000000 +0000
+++ new//Utilities/cmlibarchive/libarchive/archive_read_disk_entry_from_file.c	2010-07-03 19:44:07.000000000 +0000
@@ -63,0 +64,4 @@ __FBSDID("$FreeBSD$");
+#ifndef PATH_MAX
+#define PATH_MAX 4096
+#endif
+
diff -rup0 orig//Utilities/cmlibarchive/libarchive/archive_write_disk.c new//Utilities/cmlibarchive/libarchive/archive_write_disk.c
--- orig//Utilities/cmlibarchive/libarchive/archive_write_disk.c	2010-06-28 15:16:06.000000000 +0000
+++ new//Utilities/cmlibarchive/libarchive/archive_write_disk.c	2010-07-03 19:44:35.000000000 +0000
@@ -98,0 +99,4 @@ __FBSDID("$FreeBSD: src/lib/libarchive/a
+#ifndef PATH_MAX
+#define PATH_MAX 4096
+#endif
+
